/*
What is Node JS?
*It is a collection of dependencies that are used to run your javascript code.
*Node is 50% JS and 50% C++
*Some dependencies are:
V8 - open source javascript engine by Google.
-> 70% c++ code
libuv - 100% c++ code
*Node provides a series of wrappers (standard library module)
-> standard modules include http, fs, crypto, path

pbkdf2 function
-> hashing algorithm function

----------------------------------------------------------
How does a function get implemented?

1. javascript code is written
2. nodes javascript side library
3. process.binding() connects js and c++ functions
4. It goes to v8 engine
5. nodes c++ side library uses the libuv library
to get access to the underlying OS

----------------------------------------------------------
What is a thread?
A process is an instance of a program being run.
A thread is a todolist item/instructions that must be executed by the CPU.
A single process can have multiple threads running.

Scheduling - OS ability to process a thread at any given time.
-> a PC as only so much RAM.

How to solve the issue with resource management dedicated
towards threads?
a. use more cpus
b. allow OS scheduler to detect pause I/O time, and process threads during
this time

----------------------------------------------------------
What is an event loop in Node JS?
Event loop is inside the 1 thread Node uses to run your program.
The event loop controls what the thread should be doing at any given time.

How to understand the event loop?
Reference loop.js to understand the flow of steps
1.Node runs a while loop with a condition based on 3 criteria:
check for any pending functions, OS tasks pending, or OSoperations pending.
2. if true, then it will run a loop to process pending timers,
functions, OStasks, or OSoperations. At the end, it'll run cleanup code

Is Node single-threaded?
The Node event-loop IS SINGLE-THREADED.
FUNCTIONS IN NODE ARE *NOT* SINGLE-THREADED.
Referencing threads.js, if node was single-threaded,
the processing would be linear. HOWEVER, both functions ran
for the same amount of time. Node on the C++ side uses a thread
pool.

Why did the 5th pbkdf2 function take 2s more?
When running the pbkdf2 function more than 5 times, the thread
pool doesn't have enough thread capacity to run the application.




----------------------------------------------------------



----------------------------------------------------------






*/
