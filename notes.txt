/*
What is Node JS?
*It is a collection of dependencies that are used to run your javascript code.
*Node is 50% JS and 50% C++
*Some dependencies are:
V8 - open source javascript engine by Google.
-> 70% c++ code
libuv - 100% c++ code
*Node provides a series of wrappers (standard library module)
-> standard modules include http, fs, crypto, path

pbkdf2 function
-> hashing algorithm function

----------------------------------------------------------
How does a function get implemented?

1. javascript code is written
2. nodes javascript side library
3. process.binding() connects js and c++ functions
4. It goes to v8 engine
5. nodes c++ side library uses the libuv library
to get access to the underlying OS

----------------------------------------------------------
What is a thread?
A process is an instance of a program being run.
A thread is a todolist item/instructions that must be executed by the CPU.
A single process can have multiple threads running.

Scheduling - OS ability to process a thread at any given time.
-> a PC as only so much RAM.

How to solve the issue with resource management dedicated
towards threads?
a. use more cpus
b. allow OS scheduler to detect pause I/O time, and process threads during
this time

----------------------------------------------------------
What is an event loop in Node JS?
Event loop is inside the 1 thread Node uses to run your program.
The event loop controls what the thread should be doing at any given time.

How to understand the event loop?
Reference loop.js to understand the flow of steps
1.Node runs a while loop with a condition based on 3 criteria:
check for any pending functions, OS tasks pending, or OSoperations pending.
2. if true, then it will run a loop to process pending timers,
functions, OStasks, or OSoperations. At the end, it'll run cleanup code

Is Node single-threaded?
The Node event-loop IS SINGLE-THREADED.
FUNCTIONS IN NODE ARE *NOT* SINGLE-THREADED.
Referencing threads.js, if node was single-threaded,
the processing would be linear. HOWEVER, both functions ran
for the same amount of time. Node on the C++ side uses a thread
pool.

Why did the 5th pbkdf2 function take 2s more?
When running the pbkdf2 function more than 5 times, the thread
pool doesn't have enough thread capacity to run the application.
----------------------------------------------------------
How do I change the thread pool size?
process.env.UV_THREADPOOL_SIZE = 2;
This command will change the threadpool size to 2.


Can we use the threadpool for javascript code
or can only nodejs functions use it?
-We can write custom JS that uses the threadpool.

What functions in node std library use the threadpool?
-All fs(filesystem) module functions. some crypto stuff
- all depends on the OS


How does this threadpool stuff fit into the event loop?
-tasks running in the threadpool are pendingOperations

----------------------------------------------------------
How to benchmark the OSoperations?
-Reference async.js file
-calling google and measuring the resposne time

Why did all 7 doRequests() complete at the same time???
-libuv has some functions called OS Async helpers.
-It delegates these network requests to the operating system.
-OS handles the async request

----------------------------------------------------------
Common OS/Async questions
What functions in node std library use the OS's async features?
-Almost everything around networking for all Os's.
- making requests, setting up a port listener, e.g.

How does this os async stuff fit into the event loop?
-Tasks using the underlying OS are reflected in
-pending OSTasks array

----------------------------------------------------------
SUMMARY DIAGRAM OF EVERYTHING
reference SUMMARY-OVERVIEW PIC
1. process and execute code in index.js
2. Check if we still have work to do? Look at timers, OSTasks,
Threadpool
If yes? [REPEAT]
Run set-timeouts,setintervals,
run callbacks for any ostasks or threadpool tasks
pause and wait for stuff to happen
run any setintermmediate functions
handle close events
[START AT REPEAT LOOP]

IF NO?
End program.


----------------------------------------------------------
Crazy Node behavior
Interview question?



----------------------------------------------------------

----------------------------------------------------------

----------------------------------------------------------

----------------------------------------------------------

----------------------------------------------------------





*/
